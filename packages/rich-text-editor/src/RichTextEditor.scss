@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/design-tokens/sass/color";
@import "~@kaizen/design-tokens/sass/typography";
@import "~@kaizen/design-tokens/sass/spacing";

.editorComponent {
  position: relative;
  border-top-left-radius: $border-solid-border-radius;
  border-top-right-radius: $border-solid-border-radius;
  background-color: $color-white;
  border-bottom-left-radius: $border-solid-border-radius;
  border-bottom-right-radius: $border-solid-border-radius;
  border-style: $border-solid-border-style;
  border-width: $border-solid-border-width;
  border-color: $color-gray-500;

  &:hover {
    border-color: $color-gray-600;
  }

  &Error {
    &,
    &:hover {
      @extend .editorComponent;
      border-color: $color-red-500;
    }
  }
  &noBorder {
    @extend .editorComponent;
    border-color: transparent;
  }
}

.editorWrapper {
  &:global(.focus-visible) {
    position: relative;
    &::after {
      content: "";
      position: absolute;
      top: -6px;
      left: -6px;
      right: -6px;
      bottom: -6px;
      border: $border-solid-border-width $border-focus-ring-border-style
        $color-blue-500;
      border-radius: $border-focus-ring-border-radius;
      z-index: -1;
    }
  }
}

.editor {
  color: $color-purple-800;
  margin-top: calc(-1 * #{$border-solid-border-width});

  p {
    font-family: $typography-paragraph-body-font-family;
    font-weight: $typography-paragraph-body-font-weight;
    font-size: $typography-paragraph-body-font-size;
    line-height: $typography-paragraph-body-line-height;
    letter-spacing: $typography-paragraph-body-letter-spacing;
    margin: 0 0 $spacing-md;
  }

  ul li {
    // undo the overrides from materialize.css
    list-style-type: initial;
    margin-left: $spacing-md;

    > p {
      margin-bottom: $spacing-xs;
    }
  }

  :global(.ProseMirror) {
    border-bottom-left-radius: $border-solid-border-radius;
    border-bottom-right-radius: $border-solid-border-radius;
    font-family: $typography-paragraph-body-font-family;
    font-weight: $typography-paragraph-body-font-weight;
    font-size: $typography-paragraph-body-font-size;
    line-height: $typography-paragraph-body-line-height;
    letter-spacing: $typography-paragraph-body-letter-spacing;
    outline: none;
    padding: calc(#{$spacing-md} * 0.75);
    white-space: pre-wrap;

    > p:last-child {
      margin-bottom: 0;
    }
  }

  :global(.ProseMirror-focused) {
    .editorComponent & {
      background-color: $color-gray-200;
    }

    &::after {
      content: "";
      position: absolute;
      top: -6px;
      left: -6px;
      right: -6px;
      bottom: -6px;
      border: $border-solid-border-width $border-focus-ring-border-style
        $color-blue-500;
      border-radius: $border-focus-ring-border-radius;
      z-index: -1;
    }
  }

  &:hover {
    :global(.ProseMirror) {
      background: $color-gray-200;
    }
  }

  :global(.ProseMirror .placeholder) {
    color: rgba($color-purple-800-rgb, 0.7);
    pointer-events: none;
    height: 0;
  }

  :global(.ProseMirror:focus .placeholder) {
    display: none;
  }

  a {
    color: $color-blue-500;
    text-decoration: underline;
    word-break: break-word;
  }

  strong {
    font-weight: 600; // TODO: Should this be defined in Kaizen?
  }
}

.toolbar {
  border-bottom-style: $border-solid-border-style;
  border-bottom-width: $border-solid-border-width;
  border-color: $color-gray-500;
  padding: 4px $spacing-xs;
  vertical-align: middle;
  text-align: center;
  display: flex;
  align-items: center;
  position: relative;

  .editorComponent:hover & {
    border-color: $color-gray-600;
  }

  &Error {
    &,
    .editorComponent:hover & {
      @extend .toolbar;
      border-color: $color-red-500;
    }
  }
}
