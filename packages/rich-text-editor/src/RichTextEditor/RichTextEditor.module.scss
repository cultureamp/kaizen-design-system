@import "@kaizen/design-tokens/sass/animation";
@import "@kaizen/design-tokens/sass/border";
@import "@kaizen/design-tokens/sass/color";
@import "@kaizen/design-tokens/sass/spacing";
@import "@kaizen/design-tokens/sass/typography";
@import "../mixins";

.editor > :global(.ProseMirror) {
  @include content-styles;

  border-radius: $border-solid-border-radius;
  padding: $spacing-sm calc(#{$spacing-xs} * 3);
  position: relative;
  transition:
    background-color $animation-duration-immediate,
    border-color $animation-duration-immediate;

  &:hover,
  &:focus {
    border-color: $color-gray-600;
    background: $color-gray-200;
  }

  &:focus {
    outline: none;
  }

  &:focus-visible::after {
    $focus-ring-offset: 5px;

    content: "";
    pointer-events: none;
    position: absolute;
    background: transparent;
    border-radius: 2px 2px $border-focus-ring-border-radius
      $border-focus-ring-border-radius;
    border-width: $border-focus-ring-border-width;
    border-style: $border-focus-ring-border-style;
    border-color: $color-blue-500;
    inset: calc(-1 * #{$focus-ring-offset});
  }
}

.editor.hasToolbar > :global(.ProseMirror) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.editorWrapper {
  position: relative;
  border: $border-solid-border-width $border-solid-border-style $color-gray-500;
  background: $color-white;
  border-radius: $border-solid-border-radius;
  word-wrap: break-word;

  &:hover,
  &:focus-within {
    border-color: $color-gray-600;

    .toolbar {
      border-color: $color-gray-600;
    }
  }

  /* stylelint-disable no-descending-specificity */
  &.error {
    &,
    .toolbar {
      border-color: $color-red-500;
    }

    &:hover {
      &,
      .toolbar {
        border-color: $color-red-600;
      }
    }
  }

  &.caution {
    &,
    .toolbar {
      border-color: $color-yellow-600;
    }

    &:hover {
      &,
      .toolbar {
        border-color: $color-yellow-700;
      }
    }
  }
  /* stylelint-enable no-descending-specificity */
}

@for $i from 1 through 20 {
  .editor.rows#{$i} > :global(.ProseMirror) {
    min-height: calc(
      ((#{$typography-paragraph-body-line-height} + #{$spacing-16}) * #{$i}) -
        #{$spacing-16}
    );
  }
}
