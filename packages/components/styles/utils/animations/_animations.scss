@import './vendor/effects/fade';
@import './vendor/effects/slide';
@import './vendor/effects/zoom';

@mixin ca-animation-pop($duration: $ca-duration-slow, $delay: null) {
  animation-duration: $duration;
  animation-delay: $delay;

  @include ca-animation(pop());
}

@mixin ca-animation-pulsate($duration: $ca-duration-slow, $delay: null) {
  animation-duration: $duration;
  animation-delay: $delay;

  @include ca-animation(pulsate());
}

@mixin ca-animation-fade($state: in, $duration: $ca-duration-slow, $delay: null, $from: 0, $to: 1) {
  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: forwards;

  @if ($state == out) {
    $from: 1;
    $to: 0;
  }

  @include ca-animation(fade($from: $from, $to: $to));
}

@mixin ca-animation-slide-fade($state: in, $duration: $ca-duration-slow, $delay: null) {
  $direction: up;
  $from: 0;
  $to: 1;
  $timing: $ca-bounce-in;

  @if ($state == out) {
    $direction: down;
    $from: 1;
    $to: 0;
    $timing: $ca-bounce-out;
  }

  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: forwards;
  animation-timing-function: $timing;

  @include ca-animation(fade($from: $from, $to: $to), slide($state: out, $direction: $direction));
  @include mui-animation(fade(in));
}

@mixin ca-animation-scale-fade($state: in, $duration: $ca-duration-slow, $delay: null) {
  $from: 0;
  $to: 1;
  $timing: $ca-bounce-in;

  @if ($state == out) {
    $from: 1;
    $to: 0;
    $timing: $ca-bounce-out;
  }

  animation-duration: $duration;
  animation-delay: $delay;
  animation-fill-mode: forwards;
  animation-timing-function: $timing;

  @include ca-animation(fade($from: $from, $to: $to), zoom($from: $from, $to: $to));
}
