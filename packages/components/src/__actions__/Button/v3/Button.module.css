.button {
  /* RESET */
  appearance: none;
  background: transparent;
  color: inherit;
  font: inherit;
  margin: 0;
  border: none;
  outline: none;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* RESET */

  --button-font-family: var(--typography-paragraph-body-font-family);
  /* We don't want to couple these to paragraph design tokens or old button tokens */
  --button-font-weight: 500;
  --button-font-size: 1rem;
  --button-line-height: 1.5rem;
  --button-text-color: var(--color-white);
  --button-min-x-y: var(--spacing-40);
  --button-padding: calc(var(--spacing-8) - var(--border-solid-border-width));
  --button-icon-size: var(--spacing-24);
  --button-bg-color: var(--color-blue-500);
  --button-border-color: var(--color-blue-500);

  background-color: var(--button-bg-color);
  border: var(--border-solid-border-width) var(--border-solid-border-style);
  border-radius: var(--border-solid-border-radius);
  border-color: var(--button-border-color);
  box-sizing: border-box;
  color: var(--button-text-color);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-align: left;
  gap: var(--spacing-8);
  font-family: var(--button-font-family);
  font-weight: var(--button-font-weight);
  font-size: var(--button-font-size);
  line-height: var(--button-line-height);
  min-height: var(--button-min-x-y);
  min-width: var(--button-min-x-y);
  position: relative;
  padding: var(--button-padding);

  &[data-focus-visible]::after {
    content: "";
    position: absolute;
    background: transparent;
    border-color: var(--color-blue-500);
    border-radius: var(--border-focus-ring-border-radius);
    border-width: var(--border-focus-ring-border-width);
    border-style: var(--border-focus-ring-border-style);
    inset: calc(-1 * (var(--border-focus-ring-border-width) * 2) - 1px);
  }
}

.button svg {
  max-height: var(--button-icon-size);
  max-width: var(--button-icon-size);
  height: 100%;
  width: 100%;
}

.icon {
  /* TODO: Ideally not the above ^ I should add styles that can be passed into the icon here */
}

.small {
  --button-font-size: var(--typography-button-small-font-size);
  --button-line-height: var(--typography-button-small-line-height);
  --button-min-x-y: var(--spacing-32);
  --button-icon-size: var(--spacing-16);
  gap: var(--spacing-4);
}

.medium {
  --button-min-x-y: var(--spacing-40);
}

.large {
  --button-min-x-y: var(--spacing-48);
  --button-padding: calc(var(--spacing-12) - var(--border-solid-border-width));
  --button-icon-size: var(--spacing-24);
}

.primary {
  &[data-hovered] {
    --button-bg-color: var(--color-blue-600);
    --button-border-color: var(--color-blue-600);
  }

  &[data-pressed] {
    --button-bg-color: var(--color-blue-700);
    --button-border-color: var(--color-blue-700);
  }

  &[data-pending] {
    --button-bg-color: var(--color-blue-700);
    --button-border-color: var(--color-blue-700);
    --button-text-color: var(--color-white);

    &[data-focus-visible]::after {
      border-color: var(--color-gray-500);
    }
  }
}

.secondary {
  --button-bg-color: var(--color-white);
  --button-border-color: var(--color-gray-500);
  --button-text-color: var(--color-purple-800);

  &[data-hovered] {
    --button-bg-color: var(--color-gray-200);
    --button-border-color: var(--color-gray-600);
  }

  &[data-pressed] {
    --button-bg-color: var(--color-gray-300);
    --button-border-color: var(--color-black);
  }

  &[data-pending] {
    --button-bg-color: var(--color-gray-300);
    --button-border-color: var(--color-gray-500);
    --button-text-color: var(--purple-800);

    &[data-focus-visible]::after {
      border-color: var(--color-gray-500);
    }
  }
}

.tertiary {
  --button-bg-color: transparent;
  --button-border-color: transparent;
  --button-text-color: var(--color-purple-800);

  &[data-hovered] {
    --button-bg-color: var(--color-gray-200);
    --button-border-color: var(--color-gray-200);
  }

  &[data-pressed] {
    --button-bg-color: var(--color-gray-300);
    --button-border-color: var(--color-gray-300);
  }

  &[data-pending] {
    --button-bg-color: var(--color-gray-300);
    --button-border-color: var(--color-gray-300);
    --button-text-color: var(--color-purple);

    &[data-focus-visible]::after {
      border-color: var(--color-gray-500);
    }
  }
}

.primary-reversed,
.secondary-reversed,
.tertiary-reversed {
  &[data-focus-visible]::after {
    border-color: var(--color-blue-300);
  }
}

.primary-reversed {
  --button-bg-color: var(--color-white);
  --button-border-color: var(--color-white);
  --button-text-color: var(--color-purple-800);

  /* TODO: check on this state in designs.... doesn't seem right */
  &[data-hovered] {
    --button-bg-color: var(--color-white);
    --button-border-color: var(--color-white);
  }

  /* TODO: check on this state in designs.... doesn't seem right */
  &[data-pressed] {
    --button-bg-color: var(--color-white);
    --button-border-color: var(--color-white);
  }
}

.secondary-reversed {
  --button-bg-color: transparent;
  --button-border-color: var(--color-white);
  --button-text-color: var(--color-white);

  &[data-hovered] {
    --button-bg-color: rgba(var(--color-white-rgb), 0.2);
  }

  &[data-pressed] {
    --button-bg-color: rgba(var(--color-white-rgb), 0.1);
  }
}

.tertiary-reversed {
  --button-bg-color: transparent;
  --button-border-color: transparent;
  --button-text-color: var(--color-white);

  &[data-hovered] {
    --button-bg-color: rgba(var(--color-white-rgb), 0.2);
    --button-border-color: rgba(var(--color-white-rgb), 0.2);
  }

  &[data-pressed] {
    --button-bg-color: rgba(var(--color-white-rgb), 0.1);
    --button-border-color: rgba(var(--color-white-rgb), 0.1);
  }
}

.disabled {
  --button-bg-color: var(--color-gray-400);
  --button-border-color: var(--color-gray-400);
  --button-text-color: var(--color-white);

  &[data-hovered] {
    /* do we want to do this? */
    cursor: not-allowed;
    --button-bg-color: var(--color-gray-400);
    --button-border-color: var(--color-gray-400);
  }

  &[data-focus-visible]::after {
    border-color: var(--color-gray-500);
  }
}

.buttonContent {
  display: inline-flex;
  align-items: center;
  gap: inherit;
}

.buttonContentHidden {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  visibility: hidden;
}

.pendingContent {
  display: inline-flex;
}

.spinner {
  --spinner-spacing: var(--spacing-8);
  margin-inline-start: var(--spinner-spacing);
}

.spinner-small {
  --spinner-spacing: var(--spacing-4);
}
