@import "~@kaizen/design-tokens/sass/spacing";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/design-tokens/sass/typography";
@import "../../../../../styles/utils/button-reset";
@import "../utils/mixins";
@import "../utils/variables";

%button {
  @include button-reset;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: $typography-button-primary-font-family;
  font-weight: $typography-button-primary-font-weight;
  font-size: $typography-button-primary-font-size;
  line-height: $typography-button-primary-line-height;
  letter-spacing: $typography-button-primary-letter-spacing;
  display: inline-flex;
  // ^inline-flex is used over (block) flex here to fix an edge case where the parent element is display:grid
  //  and this element is an <a>, causing the element to be full width.
  align-items: center;
  box-sizing: border-box;
  min-height: $button-height;
  border: $border-solid-border-width $border-solid-border-style;
  border-radius: $border-solid-border-radius;
  position: relative;
  text-align: left;
  cursor: pointer;
  overflow: visible; // Required for the focus ring on IE11

  --button-color: var(--color-purple-800);
  --button-hover-color: var(--color-white);

  background-color: var(--button-background-color);
  color: var(--button-color);
  border-color: var(--button-border-color);

  &:not(.disabled, .working) {
    &:hover,
    &:active,
    &:focus-visible {
      color: var(--button-hover-color);
      background-color: var(--button-hover-background-color);
      border-color: var(--button-hover-border-color);
    }
  }

  &[href] {
    text-decoration: none;
  }

  &:active {
    transform: translateY(1px);
  }

  &:focus {
    outline: none;
  }

  &:focus-visible {
    &::after {
      $focus-ring-offset: calc((#{$border-focus-ring-border-width} * 2) + 1px);

      content: "";
      position: absolute;
      background: transparent;
      border-color: var(--color-blue-500);
      border-radius: $border-focus-ring-border-radius;
      border-width: $border-focus-ring-border-width;
      border-style: $border-focus-ring-border-style;
      inset: calc(-1 * #{$focus-ring-offset});
    }
  }

  &.reversed {
    --button-hover-color: var(--color-purple-800);

    &:focus-visible {
      &::after {
        border-color: var(--color-blue-300);
      }

      &.disabled,
      &.working {
        &::after {
          border-color: var(--color-gray-400);
        }
      }
    }
  }

  &.disabled,
  &.working {
    cursor: default;
    opacity: 30%;

    &:focus-visible {
      &::after {
        border-style: $border-dashed-border-style;
        border-color: var(--color-purple-800);
      }
    }
  }

  #{$className--content} {
    height: 100%;
    display: flex;
    align-items: center;
    padding: $button-vertical-padding
      calc(#{$spacing-md} - #{$border-solid-border-width});
  }
}

%variant-default {
  --button-background-color: var(--color-white);
  --button-border-color: var(--color-gray-500);

  --button-hover-color: var(--color-purple-800);
  --button-hover-background-color: var(--color-gray-100);
  --button-hover-border-color: var(--color-gray-600);

  &.reversed {
    --button-background-color: transparent;
    --button-border-color: rgba(var(--color-white-rgb), 0.65);
    --button-color: var(--color-white);

    --button-hover-color: var(--color-white);
    --button-hover-background-color: rgba(var(--color-white-rgb), 0.1);
    --button-hover-border-color: var(--color-white);
  }
}

%variant-primary {
  --button-background-color: var(--color-blue-500);
  --button-border-color: var(--color-blue-500);
  --button-color: var(--color-white);
  --button-hover-background-color: var(--color-blue-600);
  --button-hover-border-color: var(--color-blue-600);

  &.reversed {
    --button-background-color: var(--color-green-300);
    --button-border-color: var(--color-green-300);
    --button-color: var(--color-purple-800);

    --button-hover-background-color: var(--color-green-400);
    --button-hover-border-color: var(--color-green-400);
  }
}

%variant-destructive {
  --button-background-color: var(--color-red-500);
  --button-border-color: var(--color-red-500);
  --button-color: var(--color-white);

  --button-hover-background-color: var(--color-red-700);
  --button-hover-border-color: var(--color-red-700);

  &.reversed {
    --button-background-color: var(--color-red-300);
    --button-border-color: var(--color-red-300);
    --button-color: var(--color-purple-800);
    --button-hover-background-color: var(--color-red-400);
    --button-hover-border-color: var(--color-red-400);
  }
}

%variant-secondary {
  font-family: $typography-button-secondary-font-family;
  font-weight: $typography-button-secondary-font-weight;
  font-size: $typography-button-secondary-font-size;
  line-height: $typography-button-secondary-line-height;
  letter-spacing: $typography-button-secondary-letter-spacing;

  --button-color: var(--color-blue-500);
  --button-background-color: var(--color-white);
  --button-border-color: transparent;

  --button-hover-color: var(--color-blue-500);
  --button-hover-background-color: var(--color-blue-100);
  --button-hover-border-color: transparent;

  &.reversed {
    --button-background-color: transparent;
    --button-border-color: transparent;
    --button-color: var(--color-white);

    --button-hover-color: var(--color-white);
    --button-hover-background-color: rgba(var(--color-white-rgb), 0.1);
    --button-hover-border-color: var(--color-white);
  }
}

%variant-secondary-destructive {
  --button-color: var(--color-red-600);

  --button-hover-color: var(--color-red-600);
  --button-hover-background-color: var(--color-red-100);
  --button-hover-border-color: transparent;
}

%variant-small {
  min-height: $button-small-height;
}
