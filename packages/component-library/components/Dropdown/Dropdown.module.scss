@import "../../styles/color";
@import "../../styles/layers";
@import "../../styles/type";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/design-tokens/sass/typography";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";

$width: 248px;
$caButton-border-width: $kz-border-solid-border-width;
$caButton-verticalPadding: calc(#{$ca-grid / 2} - #{$caButton-border-width});

.dropdown {
  position: relative;
  padding: $caButton-verticalPadding
    calc(#{$ca-grid * 1} - #{$caButton-border-width});
}

.buttonReset {
  appearance: none;
  display: inline;
  background: transparent;
  color: inherit;
  font: inherit;
  cursor: pointer;
  margin: 0;
  padding: 0;
  border: none;
}

// @TODO - this should be using Kaizen's button
.dropdownButton {
  @include kz-type-inter-button-primary;
  @include ca-inherit-baseline;
  composes: buttonReset;
  cursor: pointer;
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
}

.dropdownControlAction {
  @include kz-type-inter-button-primary;
  @include ca-inherit-baseline;
}

.dropdownIcon {
  box-sizing: border-box;
  width: $ca-grid;
  height: $ca-grid;
  padding: 2px;
}

.dropdownIcon + .dropdownLabel {
  margin-left: calc(#{$ca-grid} / 2 - 2px);

  [dir="rtl"] & {
    margin-left: 0;
    margin-right: calc(#{$ca-grid} / 2 - 2px);
  }
}

// If you would like the dropdown icon to only be visible when a certain area is hovered,
// have you hover area use (or compose) the `dropdownHoverArea` class. The label will
// always be visible.
.dropdownHoverArea {
  .dropdownIcon {
    opacity: 0;
    &.isOpen,
    &:focus {
      opacity: 1;
    }
  }
  &:hover .dropdownIcon {
    opacity: 1;
  }
}

.chevronIcon {
  position: relative;
  top: 4px;
}

.menuContainer {
  position: absolute;
  width: $width;
  z-index: $ca-z-index-dropdown;
  right: 0;

  [dir="rtl"] & {
    right: auto;
    left: 0;
  }
}

.reversedColor {
  color: $kz-color-white;
}
