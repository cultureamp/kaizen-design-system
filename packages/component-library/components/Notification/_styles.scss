@import "~@kaizen/design-tokens/sass/typography";
@import "~@kaizen/design-tokens/sass/color";
@import "~@kaizen/design-tokens/sass/shadow";
@import "~@kaizen/design-tokens/sass/spacing";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";
@import "~@kaizen/deprecated-component-library-helpers/styles/layout";
@import "~@kaizen/deprecated-component-library-helpers/styles/color";
@import "~@kaizen/draft-button/KaizenDraft/Button/styles";
@import "../../styles/border";
@import "../../styles/layers";
@import "../../styles/animation";
@import "../../styles/responsive";

$ca-notification-border-width: $border-solid-border-width;
$ca-notification-vertical-padding: calc(
  #{$ca-grid / 4} - #{$ca-notification-border-width}
);
$ca-notification-inline-horizontal-padding: $spacing-sm;
$ca-notification-toast-horizontal-padding: 10px;
$ca-notification-fade-out: opacity $ca-duration-rapid ease;
$ca-notification-collapse-height: margin-top $ca-duration-rapid ease,
  margin-bottom $ca-duration-rapid ease;
$ca-notification-collapse-height-delayed: margin-top $ca-duration-rapid ease
    $ca-duration-rapid,
  margin-bottom $ca-duration-rapid ease;
$ca-notification-pop-up: transform $ca-duration-rapid ease-out;
$ca-notification-slide-right: transform $ca-duration-fast ease-out;

%ca-notification {
  display: flex;
  box-sizing: border-box;
  pointer-events: all;

  // Variants
  &%ca-notification---inline,
  &%ca-notification---toast {
    margin-bottom: $ca-grid;
    border-width: $ca-notification-border-width;
    border-style: $border-solid-border-style;
    border-radius: $border-solid-border-radius;
  }

  &%ca-notification---inline {
    width: 100%;
    min-height: 46px;
    padding: $ca-notification-vertical-padding
      $ca-notification-inline-horizontal-padding;
    transition: $ca-notification-fade-out, $ca-notification-pop-up,
      $ca-notification-collapse-height;
  }

  &%ca-notification---toast {
    width: 25rem;
    box-shadow: $shadow-small-box-shadow;
    max-width: 100%;
    padding: $ca-notification-vertical-padding
      $ca-notification-toast-horizontal-padding;
    transition: $ca-notification-fade-out, $ca-notification-slide-right,
      $ca-notification-collapse-height-delayed;
    will-change: transform;
  }

  &%ca-notification---global {
    width: 100%;
    display: flex;
    align-items: center;
    border-width: 0;
    border-radius: 0;
    margin-bottom: 0;
    transition: $ca-notification-collapse-height;
    position: relative;
    z-index: $ca-z-index-fixed;
  }

  // Types

  &%ca-notification---affirmative {
    background: $color-green-100;
    border-color: $color-green-300;
    color: $color-purple-800;

    &%ca-notification---global {
      background-color: $color-green-200;
    }
  }

  &%ca-notification---informative {
    background: $color-blue-100;
    border-color: $color-blue-300;
    color: $color-purple-800;

    &%ca-notification---global {
      background-color: $color-blue-200;
    }
  }

  &%ca-notification---cautionary {
    background: $color-yellow-100;
    border-color: $color-yellow-400;
    color: $color-purple-800;

    &%ca-notification---global {
      // Yuzu200 for Heart theme, Yuzu300 for Zen theme. Switch not needed when Zen is removed.
      // Use Yuzu200 for Heart theme, and Yuzu300 for zen (the default fallback)
      background-color: var($color-yellow-200-id, $color-yellow-300);
    }
  }

  &%ca-notification---negative {
    background: $color-red-100;
    border-color: $color-red-300;
    color: $color-purple-800;

    &%ca-notification---global {
      // Coral200 for Heart theme, Coral300 for Zen theme. Switch not needed when Zen is removed.
      // Use Coral 200 for Heart theme, and Coral 300 for zen (the default fallback)
      background-color: var($color-red-200-id, $color-red-300);
    }
  }

  // Hidden state

  &%ca-notification---hidden {
    opacity: 0;

    &%ca-notification---inline,
    &%ca-notification---global {
      margin-bottom: 0;
    }

    &%ca-notification---inline {
      // When entering we use "ease-out", but when transitioning to hidden we want to use "ease-in".
      // We want it moving the fastest when it is the furthest off screen.
      transition-timing-function: ease-in;
      transform: translateY(-50%);
    }
    &%ca-notification---toast {
      // When entering we use "ease-out", but when transitioning to hidden we want to use "ease-in".
      // We want it moving the fastest when it is the furthest off screen.
      transition-timing-function: ease-in;
      transform: translateX(50%);
    }

    &%ca-notification---global {
      z-index: $ca-z-index-fixed - 1;
      opacity: 1;
    }
  }

  // Modifiers

  &%ca-notification---noBottomMargin {
    margin-bottom: 0;
  }
}

%ca-notification__icon {
  align-items: flex-start;
  box-sizing: content-box;

  %ca-notification---affirmative & {
    color: $color-green-500;
  }

  %ca-notification---informative & {
    color: $color-blue-500;
  }

  %ca-notification---cautionary & {
    color: $color-yellow-500;
  }

  %ca-notification---negative & {
    color: $color-red-500;
  }

  %ca-notification---inline &,
  %ca-notification---toast & {
    width: 22px;
    height: 22px;
    margin-top: $ca-grid / 4;
  }

  %ca-notification---global & {
    $size: $ca-grid * 1.25;

    width: $size;
    height: $size;
    padding: (($ca-grid * 2) - $size) / 2;
    margin: $ca-grid / 4;
    border-radius: $border-solid-border-radius;

    // Override the type-specific color values set above
    color: $color-white;
  }

  %ca-notification---global%ca-notification---affirmative & {
    background-color: $color-green-500;
  }
  %ca-notification---global%ca-notification---informative & {
    background-color: $color-blue-500;
  }
  %ca-notification---global%ca-notification---cautionary & {
    background-color: $color-yellow-500;
  }
  %ca-notification---global%ca-notification---negative & {
    background-color: $color-red-500;
  }
}

%ca-notification__text-container {
  box-sizing: content-box;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  flex: 1 0 0;

  %ca-notification---inline &,
  %ca-notification---toast & {
    margin-left: 6px;
  }

  %ca-notification---global & {
    margin-left: 14px;
    padding: 0.25 * $ca-grid 0;
  }

  %ca-notification---inline & {
    // Inline notifications often fade onto a white background.
    // Fading the higher-contrast text out at, as well as the whole container, makes for a smoother animation.
    transition: $ca-notification-fade-out;
  }

  &%ca-notification---forceMultiline {
    flex-direction: column;
  }
}

%ca-notification__title {
  @include kz-typography-heading-6;
  margin: 0;
  padding-right: 6px;
  // overriding Bootstrap style that changes h6s to text-transform: uppercase
  text-transform: none;
  color: inherit;
  top: 0.37em;
}

%ca-notification__text {
  @include kz-typography-paragraph-small;
  margin: 0;
  color: inherit;

  %ca-notification---inline &,
  %ca-notification---toast & {
    @include kz-typography-paragraph-small;
    // When the title and text are on different lines this ensures the baselines of the first lines are exactly 1 grid unit apart.
    // When they are both on a single line it ensures both are 1 grid unit tall.
    margin-top: $ca-grid / 4;
    flex: 0 1 auto;
    padding-bottom: 0.75rem;
    top: 0.21em;
  }

  %ca-notification---global & {
    //Inherit baseline because the parent selector doesn't.
    @include ca-inherit-baseline;
    font-weight: $typography-paragraph-body-font-weight;
    font-size: $typography-paragraph-body-font-size;
    line-height: $typography-paragraph-body-line-height;
    letter-spacing: $typography-paragraph-body-letter-spacing;
  }

  a[href] {
    color: $ca-link-text-color;
    text-decoration: underline;

    &:hover {
      color: $ca-link-hover-text-color;
      text-decoration: none;
    }

    %ca-notification---global &,
    %ca-notification---global &:hover {
      color: $color-purple-800;
    }
  }

  strong {
    font-weight: $ca-weight-semibold;
  }

  p {
    font-weight: inherit;
  }
}

%ca-notification__cancel {
  @include button-reset;
  composes: interactiveIconWrapper from "../../Icon/Icon.module.scss";
  color: $color-purple-800;
  transform: none;

  &:active {
    transform: translateY(1px);
  }

  // The negative margins below are so that our clickable area will overlap the notification padding
  %ca-notification---inline &,
  %ca-notification---toast & {
    width: $ca-grid * 2;
    height: $ca-grid * 2;
    margin-top: -$ca-grid / 4;
    margin-bottom: -$ca-grid / 4;
  }

  %ca-notification---inline & {
    margin-right: calc(-1 * #{$ca-notification-inline-horizontal-padding});
  }

  %ca-notification---toast & {
    margin-right: -$ca-notification-toast-horizontal-padding;
  }

  %ca-notification---global & {
    padding-right: (5 / 8) * $ca-grid;
    width: $ca-grid * 2.5;
    height: $ca-grid * 2.5;
    margin-right: -15px;
    margin-top: -$ca-grid / 2;
    margin-bottom: -$ca-grid / 2;
  }
}

%ca-notification__cancel__inner {
  @include ca-margin($end: $spacing-sm);
  // We ignore line-height so that the icon wrapper is the same size as the icon, not the current line.
  line-height: 0;
  float: right;
  display: flex;
  align-items: center;
}

%ca-notification__cancel__label {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
