@import "~@kaizen/design-tokens/sass/color";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/draft-form/KaizenDraft/Form/Primitives/base";
@import "../../decision-tokens.scss";

// Vars
$input-disabled-opacity: 0.3;
$input-disabled-border-alpha: 50%;

// Helpers
@mixin form-input-focus-state {
  &:focus:not([disabled]):not(.caution):not(.error),
  &:hover:focus:not([disabled]):not(.caution):not(.error),
  &:hover:not([disabled]) {
    @content;
  }
}

.wrapper {
  position: relative;
}

.textarea {
  @include form-input-reset;
  border-radius: $border-solid-border-radius;
  width: 100%;
  border: $border-solid-border-width $border-solid-border-style $color-gray-500;
  padding: $spacing-sm;
  color: $color-purple-800-rgb;
  display: block;
  resize: vertical;

  &:hover:not(.caution):not(.error) {
    border-color: $color-gray-500;
  }

  @include form-input-focus-state {
    border-color: $color-gray-600;
  }

  @include form-input-placeholder {
    line-height: 1.5;
    color: $dt-color-form-text-color-placeholder;
  }
}

.textarea:focus + .focusRing {
  $focus-ring-offset: 3px;
  position: absolute;
  background: transparent;
  border-radius: $border-focus-ring-border-radius;
  border-width: $border-focus-ring-border-width;
  border-style: $border-focus-ring-border-style;
  border-color: transparent;
  top: -$focus-ring-offset;
  left: -$focus-ring-offset;
  right: -$focus-ring-offset;
  bottom: -$focus-ring-offset;
  pointer-events: none;
}

.textarea.default {
  @include form-input-focus-state {
    background-color: $color-gray-200;
  }

  &:focus + .focusRing {
    border-color: $color-blue-500;
  }

  &.disabled {
    background-color: $color-white;
    border-color: rgba($color-gray-500-rgb, $input-disabled-opacity);
    color: rgba($color-purple-800-rgb, $input-disabled-opacity);

    @include form-input-placeholder {
      opacity: $input-disabled-opacity;
    }
  }

  &:not(.error):not(.caution) {
    &:disabled {
      border-color: rgba($color-gray-500-rgb, $input-disabled-opacity);
    }

    @include form-input-focus-state {
      border-color: $color-gray-600;
    }
  }

  &.error {
    border-color: $color-red-500;

    &.disabled {
      border-color: rgba($color-red-500-rgb, $input-disabled-opacity);
    }
  }

  &.caution {
    border-color: $color-yellow-600;

    &.disabled {
      border-color: rgba($color-yellow-600-rgb, $input-disabled-opacity);
    }
  }
}

// Reversed (Dark Backgrounds)
.textarea.reversed {
  @include form-input-focus-state {
    background: rgba($color-white-rgb, 0.1);
  }

  color: $color-white;
  border-color: rgba($color-white-rgb, 0.65);
  background: transparent;

  @include form-input-placeholder {
    line-height: 1.5;
    color: $color-white;
  }

  &:focus,
  &:hover {
    border-color: $color-white;
  }

  &:focus + .focusRing {
    border-color: $color-blue-300;
  }

  &:not(.error):not(.caution) {
    border-color: rgba($color-white-rgb, 0.65);

    &:disabled {
      border-color: rgba($color-white-rgb, $input-disabled-opacity);
    }

    @include form-input-focus-state {
      border-color: $color-white;
    }
  }

  &.disabled {
    background: transparent;
    color: rgba($color-white-rgb, $input-disabled-opacity);

    @include form-input-placeholder {
      opacity: $input-disabled-opacity;
    }
  }

  &.error {
    border-color: $color-red-300;

    &.disabled {
      border-color: rgba($color-red-300-rgb, $input-disabled-opacity);
    }
  }

  &.caution {
    border-color: $color-yellow-400;

    &.disabled {
      border-color: rgba($color-yellow-400-rgb, $input-disabled-opacity);
    }
  }
}
