@import "~@kaizen/design-tokens/sass/color-vars";
@import "~@kaizen/design-tokens/sass/border-vars";
@import "~@kaizen/deprecated-component-library-helpers/styles/color";
@import "~@kaizen/component-library/styles/border";
@import "~@kaizen/component-library/styles/mixins/forms";
@import "../../decision-tokens.scss";

$checkbox-size: 24px;
$icon-size: 24px;
$focus-ring-offset: 2px;

// override bootstrap styles
.checkbox.checkbox {
  @include form-input-visually-hidden();
  width: $checkbox-size;
  height: $checkbox-size;
  margin: 0;
}

.icon {
  height: $checkbox-size;
  width: $checkbox-size;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  // .icon is inside .box so .box's border-box rule means
  // .icon sits to the right of .box's left-side border
  left: calc(-1 * #{$kz-var-border-solid-border-width});
  color: $kz-var-color-white;
}

.icon.reversed {
  color: $dt-color-form-color-icon-reversed;
}

.box {
  position: relative;
  pointer-events: none;
  background: $kz-var-color-white;
  height: $checkbox-size;
  width: $checkbox-size;
  top: 0;
  border: $kz-var-border-solid-border-width $kz-var-border-solid-border-style
    $dt-color-form-border-color;
  border-radius: $kz-var-border-solid-border-radius;
  box-sizing: border-box;
  background-color: white;
  border-color: $dt-color-form-border-color;

  .checkbox:checked + &,
  .checkbox:indeterminate + & {
    background: $dt-color-checkbox-background-color-checked;
    background-color: $dt-color-form-border-color;
  }

  .checkbox:focus + & {
    background: white;
    border-color: $dt-color-form-border-color-hover;
  }

  .checkbox:checked:focus + &,
  .checkbox:indeterminate:focus + & {
    background: $dt-color-form-border-color-hover;
    border-color: $dt-color-form-border-color-hover;
  }

  @media (hover: hover) and (pointer: fine) {
    .checkbox:checked:not([disabled]):hover + &,
    .checkbox:indeterminate:not([disabled]):hover + & {
      background: $dt-color-form-border-color-hover;
      border-color: $dt-color-form-border-color-hover;
    }

    .checkbox:not([disabled]):hover + & {
      border-color: $dt-color-form-border-color-hover;
    }
  }

  .checkbox:focus + &::after {
    content: "";
    box-sizing: border-box;
    position: absolute;
    background: transparent;
    border-radius: $kz-var-border-focus-ring-border-radius;
    border-width: $kz-var-border-focus-ring-border-width;
    border-style: $kz-var-border-focus-ring-border-style;
    border-color: $dt-color-form-border-color-focus;
    top: -$focus-ring-offset - ($checkbox-size / 8);
    left: -$focus-ring-offset - ($checkbox-size / 8);
    width: calc(
      #{$checkbox-size} + #{$focus-ring-offset} + #{$kz-var-border-solid-border-width} *
        2
    );
    height: calc(
      #{$checkbox-size} + #{$focus-ring-offset} + #{$kz-var-border-solid-border-width} *
        2
    );
  }

  .checkbox:disabled + & {
    opacity: 0.3;
  }
}

.box.reversed {
  border: $kz-var-border-solid-border-width $kz-var-border-solid-border-style
    $kz-var-color-wisteria-100;
  background-color: $kz-var-color-wisteria-700;

  .checkbox:not([checked]):focus + & {
    border-color: $kz-var-color-wisteria-100;
    background-color: $kz-var-color-wisteria-700;
  }

  @media (hover: hover) and (pointer: fine) {
    .checkbox:not([checked]):hover + & {
      border-color: $kz-var-color-white;
      background-color: $kz-var-color-wisteria-300;
    }
  }

  .checkbox:checked + &,
  .checkbox:indeterminate + & {
    background: $kz-var-color-wisteria-300;
  }

  .checkbox:checked:focus + &,
  .checkbox:indeterminate:focus + & {
    background: rgba($kz-var-color-wisteria-200-rgb-params, 0.65);
    border-color: $kz-var-color-wisteria-100;
  }

  @media (hover: hover) and (pointer: fine) {
    .checkbox:indeterminate:hover + &,
    .checkbox:checked:hover + & {
      background: $kz-var-color-white;
      border-color: $kz-var-color-white;
    }
  }

  .checkbox:focus + &::after {
    border-color: $dt-color-form-border-color-reversed-focus;
  }
}

.box.error {
  border-color: $kz-var-color-coral-300;

  .checkbox:not([checked]):focus + & {
    border-color: $kz-var-color-coral-300;
  }

  @media (hover: hover) and (pointer: fine) {
    .checkbox:not([checked]):hover + & {
      border-color: $kz-var-color-coral-300;
    }
  }
}
