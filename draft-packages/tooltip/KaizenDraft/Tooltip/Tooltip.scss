@import "~@kaizen/design-tokens/sass/shadow";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/design-tokens/sass/color";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";
@import "~@kaizen/component-library/styles/animation";
@import "~@kaizen/component-library/styles/layers";

// Sync with Tooltip.tsx
$arrow-height: 10px;
$arrow-width: 20px;

$dt-tooltip-content-border: $color-gray-300;

.tooltip {
  position: relative; // Make this a positioned element so z-index works. (Note: Popper overrides this to absolute.)
  pointer-events: none;
  z-index: $ca-z-index-tooltip;
}

.tooltipContent {
  border-radius: $border-solid-border-radius;
  transition: opacity $ca-duration-fast, transform $ca-duration-fast;
  padding: $ca-grid / 2 $ca-grid / 2;
  border: $border-solid-border-width $border-solid-border-style
    $dt-tooltip-content-border;
  box-shadow: $shadow-small-box-shadow;
  text-align: center;
  max-width: 400px;
  // I'm having a problem getting the tooltip width to match the size of the text content.
  // As a workaround, I'm just going to set a min width of 200px. It should be enough
  // in most cases.
  min-width: 200px;
  @include kz-typography-paragraph-body($size: 14);
  top: initial; // Overrides the `top` value of kz-typography-paragraph-body
  color: $color-purple-800;
  background-color: white;
}

.arrow {
  // Ensure the arrow always sits on top of the tooltipContent
  z-index: 1;

  // This is required by popper, otherwise positioning issues will exist.
  // https://github.com/popperjs/react-popper/issues/354#issuecomment-616540651
  position: absolute;

  [data-popper-placement^="top"] & {
    bottom: 0;
  }

  [data-popper-placement^="bottom"] & {
    top: 0;

    // There is a conflict with the popper arrow styling, which also
    // adds a transform to the arrow. Hence, we need this additional
    // wrapper, just to rotate it.
    .arrowInner {
      transform: rotate(180deg);
    }
  }
}

.arrowWhite::before,
.arrowWhite::after {
  content: "";
  position: absolute;
  left: 50%;
  border-left: ($arrow-width / 2) solid transparent;
  border-right: ($arrow-width / 2) solid transparent;
  margin-left: -($arrow-width / 2);
}

.arrowWhite::before {
  border-top: $arrow-height solid $dt-tooltip-content-border;
}

.arrowWhite::after {
  border-top: $arrow-height solid white;
  margin-top: -2px;
}

.arrowShadow::before {
  border-top: 0px solid $dt-tooltip-content-border;
}

// Triangle portion is a little darker to bring out shadow
.arrowShadow::after {
  border-top: $arrow-height solid rgba($color-purple-800-rgb, 0.09);
  margin-top: 1px;
  filter: blur(4px);
}

.displayInline {
  display: inline;
}

.displayBlock {
  display: block;
}

.displayInlineBlock {
  display: inline-block;
}

.displayFlex {
  display: flex;
}

.displayInlineFlex {
  display: inline-flex;
}
