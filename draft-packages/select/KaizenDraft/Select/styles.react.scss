@import "~@kaizen/design-tokens/sass/color";
@import "~@kaizen/design-tokens/sass/border";
@import "~@kaizen/design-tokens/sass/shadow";
@import "~@kaizen/draft-form/KaizenDraft/Form/Primitives/Input/styles.scss";
@import "~@kaizen/component-library/styles/color";
@import "~@kaizen/component-library/styles/type";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";

@mixin base-font-style() {
  @include kz-typography-paragraph-body;
  @include ca-inherit-baseline;
  color: $kz-color-wisteria-800;
}

.specificityIncreaser {
  .control {
    min-height: $input-height;
    border: $kz-border-solid-border-width $kz-border-solid-border-style
      $ca-border-color;
    border-radius: $kz-border-solid-border-radius;

    &:hover {
      border-color: $ca-border-color-hover;
    }
  }

  .focusedControl {
    border-color: $ca-border-color-focus;
    box-shadow: none;

    &:hover {
      border-color: $ca-border-color-focus;
      box-shadow: none;
    }
  }

  .placeholder {
    @include base-font-style();
    opacity: $input-placeholder-opacity;
  }

  .menu {
    // Temporary 6px until we redesign this component with Inter
    border: 6px $kz-border-solid-border-style transparent;
    border-radius: $kz-border-solid-border-radius;
    box-shadow: $kz-shadow-large-box-shadow;
  }

  .option {
    @include base-font-style();
    border-radius: 4px;
  }

  .focusedOption {
    background-color: $kz-color-cluny-100;
    color: $kz-color-cluny-500;

    &:active {
      background-color: $kz-color-cluny-100;
    }
  }

  .selectedOption {
    background-color: $kz-color-cluny-100;
  }

  .noOptionsMessage {
    @include base-font-style();
  }

  .singleValue {
    @include base-font-style();
  }

  &.reversed {
    .singleValue {
      color: $kz-color-white;
    }
    .singleValueOverrides {
      color: $kz-color-white;
    }
  }

  .multiValue {
    @include kz-typography-paragraph-body;
    @include ca-inherit-baseline;
    color: $kz-color-wisteria-800;
    border-radius: 15px;
    padding: $ca-grid * 0.075 $ca-grid * 0.25;
    cursor: default;
  }

  &.secondary.reversed {
    .control {
      background: add-alpha($kz-color-white, 10%);
      color: $kz-color-white;
      border: $kz-border-borderless-border-width
        $kz-border-borderless-border-style $kz-border-borderless-border-color;
      border-radius: $kz-border-borderless-border-radius;

      &:hover {
        background: add-alpha($kz-color-white, 20%);
      }
    }

    .dropdownIndicator {
      color: $kz-color-white;
    }

    $secondary-reversed-focus-color: $kz-color-cluny-300;

    .focusedControl {
      border-color: $secondary-reversed-focus-color;

      &:hover {
        border-color: $secondary-reversed-focus-color;
      }
    }
  }

  &.controlWidthContainSelection {
    .control {
      display: inline-block;
      max-width: 100%;

      > div {
        // TODO: gross, sorry! I Couldnt find a way to add a class to this
        // element that comes from react-select

        flex-wrap: nowrap;
      }
    }

    .indicatorsContainer {
      position: absolute;
      right: 0;
      top: 4px; //TODO hacky!
    }

    .singleValueOverrides {
      overflow: hidden;
      position: static;
      white-space: nowrap;
      top: auto;
      transform: none;
      max-width: 100%;
      padding-right: 30px;
      line-height: 40px; //TODO hacky!
    }

    .singleValue {
      max-width: 100%;
    }
  }
}
