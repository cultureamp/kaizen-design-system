@import "~@kaizen/deprecated-component-library-helpers/styles/layout";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";
@import "~@kaizen/design-tokens/sass/animation-vars";
@import "~@kaizen/design-tokens/sass/border-vars";
@import "~@kaizen/design-tokens/sass/color-vars";
@import "~@kaizen/design-tokens/sass/spacing-vars";
@import "~@kaizen/draft-button/KaizenDraft/Button/styles";

$default-width: 385px;
$option-height: $kz-var-spacing-xl;
$max-visible-options: 6;
$navigation-transition-speed: $kz-var-animation-duration-rapid;
$navigation-transition-easing: $kz-var-animation-easing-function-ease-in-out;
$delay-before-showing-loading-placeholders: 500ms;

.container {
  -webkit-font-smoothing: antialiased;
  border: $kz-var-border-solid-border-width $kz-var-border-solid-border-style
    $ca-border-color;
  border-radius: $kz-var-border-solid-border-radius;
  display: flex;
  overflow: hidden;
  transition: height $navigation-transition-speed $navigation-transition-easing;
  max-height: calc(
    ((2 + #{$max-visible-options}) * #{$option-height}) +
      (2 * #{$kz-var-border-solid-border-width})
  );

  &,
  & * {
    box-sizing: border-box;
  }
}

.defaultWidth {
  width: $default-width;
}

.menu {
  flex-shrink: 0;
}

.header {
  background-color: $kz-var-color-wisteria-700;
  color: $kz-var-color-wisteria-200;
}

.parent {
  margin: 0 $kz-var-spacing-sm;
  border: $kz-var-border-borderless-border-width
    $kz-var-border-borderless-border-style
    $kz-var-border-borderless-border-color;
  border-bottom-width: 1px;
  border-bottom-color: $kz-var-color-wisteria-500;
  height: $option-height;
  display: flex;
  align-items: center;
}

.parentButton {
  @include button-reset;
  color: inherit;
  display: flex;
  align-items: center;
  width: 100%;
  cursor: default;

  :global(.js-focus-visible) & {
    &:focus {
      outline: none;
    }

    &:global(.focus-visible) {
      outline: $kz-var-border-focus-ring-border-width
        $kz-var-border-focus-ring-border-style $kz-var-color-cluny-300;
    }
  }
}

.disabledParentButton {
  composes: parentButton;
  opacity: 0.3;
}

.parentButtonIcon {
  @include ca-margin($start: -8px, $end: $kz-var-spacing-xs);
  height: $kz-var-spacing-md;
  width: $kz-var-spacing-md;
}

.parentButtonIcon > svg {
  display: block;
}

.current {
  margin: 0 $kz-var-spacing-sm;
  border: $kz-var-border-borderless-border-width
    $kz-var-border-borderless-border-style
    $kz-var-border-borderless-border-color;
  height: $option-height;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.currentButton {
  @include button-reset;
  @include ca-type-align-start;
  @include ca-margin($end: $kz-var-spacing-md);
  color: inherit;
  flex: 1;
  cursor: default;

  :global(.js-focus-visible) & {
    &:focus {
      outline: none;
    }

    &:global(.focus-visible) {
      outline: $kz-var-border-focus-ring-border-width
        $kz-var-border-focus-ring-border-style $kz-var-color-cluny-300;
    }
  }
}

.body {
  @include ca-margin($end: 4px);
  background-color: $kz-var-color-white;
  color: $kz-var-color-wisteria-800;
  max-height: calc(#{$option-height} * #{$max-visible-options});
  overflow-y: auto;
}

.child {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.childLabelButton {
  @include button-reset;
  @include ca-type-align-start;
  color: inherit;
  flex: 1 0;
  height: $option-height;
  padding: 0 $kz-var-spacing-sm;
  border: $kz-var-border-focus-ring-border-width
    $kz-var-border-focus-ring-border-style
    $kz-var-border-borderless-border-color;
  cursor: default;

  // allows the .childLabelText to be truncated with white-space: nowrap
  // and not break the flexbox layout
  min-width: 0;

  :global(.js-focus-visible) & {
    &:focus {
      outline: none;
    }

    &:global(.focus-visible) {
      border-color: $kz-var-color-cluny-500;
    }
  }
}

.childLabelText {
  @include kz-typography-paragraph-body;
  @include ca-inherit-baseline;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.childDrilldownButton {
  @include button-reset;
  color: inherit;
  height: $option-height;
  padding: 0 $kz-var-spacing-sm;
  display: flex;
  align-items: center;
  border: $kz-var-border-focus-ring-border-width
    $kz-var-border-focus-ring-border-style
    $kz-var-border-borderless-border-color;
  cursor: default;

  :global(.js-focus-visible) & {
    &:focus {
      outline: none;
    }

    &:global(.focus-visible) {
      border-color: $kz-var-color-cluny-500;
    }
  }
}

.disabledChildDrilldownButton {
  composes: childDrilldownButton;
  opacity: 0.3;
}

.keyboardHighlightedChild {
  composes: child;
  background-color: $kz-var-color-wisteria-100;
}

.childLabelButton:hover,
.childDrilldownButton:hover {
  background-color: $kz-var-color-wisteria-100;
}

.childDrilldownButtonIcon {
  height: $kz-var-spacing-md;
  width: $kz-var-spacing-md;
}

.parentMenu,
.currentMenu,
.childMenu {
  transform: translateX(-100%);

  [dir="rtl"] & {
    transform: translateX(100%);
  }
}

:global(.animating-enter),
:global(.animating-enter-done) {
  &.parentMenu {
    transition: transform $navigation-transition-speed
      $navigation-transition-easing;
    transform: translateX(0);
  }

  &.childMenu {
    transition: transform $navigation-transition-speed
      $navigation-transition-easing;
    transform: translateX(-200%);

    [dir="rtl"] & {
      transform: translateX(200%);
    }
  }
}

:global(.animating-exit),
:global(.animating-exit-done) {
  &.currentMenu {
    transition: transform $navigation-transition-speed
      $navigation-transition-easing;
  }

  &.currentMenu.toChild {
    transform: translateX(-200%);

    [dir="rtl"] & {
      transform: translateX(200%);
    }
  }

  &.currentMenu.toParent {
    transform: translateX(0);
  }
}

.loadingMenu {
  composes: menu;
  background-color: $kz-var-color-white;

  .parent,
  .current {
    opacity: 0.1;
  }

  .body {
    transition: opacity $kz-var-animation-duration-deliberate
      $navigation-transition-easing;
    transition-delay: $delay-before-showing-loading-placeholders;
    opacity: 0;
  }

  &.shouldAnimate .body {
    opacity: 1;
  }
}
