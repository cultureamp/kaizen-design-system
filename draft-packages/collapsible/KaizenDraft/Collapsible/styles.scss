@import "~@kaizen/design-tokens/sass/color-vars";
@import "~@kaizen/design-tokens/sass/border-vars";
@import "~@kaizen/design-tokens/sass/shadow-vars";
@import "~@kaizen/deprecated-component-library-helpers/styles/layout";
@import "~@kaizen/component-library/styles/border";
@import "~@kaizen/component-library/styles/animation";

$heading-active-color: $kz-var-color-wisteria-100;

.container {
  box-shadow: $kz-var-shadow-small-box-shadow;
  border-radius: $kz-var-border-borderless-border-radius;
  overflow: hidden;
}

// We set overflow: hidden on the container, so that child nodes without border
// radius do not overlap the container. However, this breaks the sticky headers
// because it creates a new scroll container. The solution is to use the new
// overflow: clip setting, but until it has full support across browsers we also
// need a fallback. When there is full support for overflow:clip, we can use that
// in .container for everything
.stickyContainer {
  overflow: visible;
  @supports (overflow: clip) {
    overflow: clip;
  }
}

.separated {
  & + .separated {
    @include ca-margin($top: $ca-grid * 0.3);
  }
}

.groupItem {
  & + .groupItem {
    border-top: 1px solid $ca-border-color;
  }
}

.button {
  display: flex;
  width: 100%;
  align-items: center;
  text-align: left;
  background-color: white;
  border: none;
  transition: background-color $ca-duration-rapid;

  @include ca-padding(
    $top: $ca-grid,
    $end: $ca-grid,
    $bottom: $ca-grid,
    $start: $ca-grid
  );

  &:hover {
    background-color: $heading-active-color;
  }
}

.title {
  flex: 1 1 auto;
}

.defaultVariant {
  background-color: $heading-active-color;
}

.clearVariant {
  border-bottom: 1px solid $kz-var-color-wisteria-200;
}

.sticky {
  position: -webkit-sticky;
  position: sticky;
  z-index: 10;
}

.section {
  background-color: white;
  @include ca-padding(
    $top: $ca-grid,
    $end: $ca-grid,
    $bottom: $ca-grid,
    $start: $ca-grid
  );
}

.noPadding {
  padding: 0;
}

.hide {
  display: none;
}
