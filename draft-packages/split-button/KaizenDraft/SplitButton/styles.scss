@import "~@kaizen/design-tokens/sass/color-vars";
@import "~@kaizen/design-tokens/sass/border-vars";
@import "~@kaizen/design-tokens/sass/shadow-vars";
@import "~@kaizen/design-tokens/sass/variable-identifiers";
@import "~@kaizen/deprecated-component-library-helpers/styles/color";
@import "~@kaizen/deprecated-component-library-helpers/styles/type";
@import "~@kaizen/component-library/styles/border";
@import "~@kaizen/component-library/styles/layers";
@import "~@kaizen/component-library/styles/animation";

$base-border: $kz-var-border-solid-border-width
  $kz-var-border-solid-border-style
  var($kz-var-id-color-iron, $kz-var-color-wisteria-200);
$button-width: 124px;

$side-padding: 3/4 * $ca-grid;

@mixin input-icon($color, $reversed) {
  color: $color;

  .withReversed & {
    color: $reversed;
  }
}

@mixin button-mixing(
  $background,
  $border-color,
  $color,
  $hover-background,
  $hover-border-color,
  $active-background,
  $active-border-color,
  $disabled-background,
  $disabled-border-color,
  $disabled-color
) {
  &:hover {
    text-decoration: none;
    color: inherit;
  }

  &:not(.disabled):not(:disabled) {
    background: $background;
    border-color: $border-color;
    color: $color;

    &:hover,
    &:active {
      background: $hover-background;
      border-color: $hover-border-color;
    }

    &:active {
      background: $active-background;
      border-color: $active-border-color;
      transform: translateY(1px);
    }

    // Use JS polyfill to simulate :focus-visible, not yet supported by browsers
    // https://github.com/WICG/focus-visible#backwards-compatibility
    :global(.js-focus-visible) & {
      // hide native focus ring when :focus but not :focus-visible
      &:focus {
        outline: none;
      }

      // show custom focus ring when :focus-visible
      &:global(.focus-visible) {
        border: $kz-var-border-focus-ring-border-width
          $kz-var-border-focus-ring-border-style $kz-var-color-cluny-500;
      }
    }
  }

  // Disabled
  &:disabled,
  &.disabled {
    background: $disabled-background;
    border-color: $disabled-border-color;
    color: $disabled-color;
  }
}

.root {
  @include ca-type-block(inline-block);
  height: 40px; // Set a fixed height to avoid expansion when dropdown is displayed
  position: relative;

  --dt-heart-disabled-border-color: rgba(
    var(#{$kz-var-id-color-iron-rgb-params}),
    0.3
  );
  --dt-heart-disabled-color: rgba(
    var(#{$kz-var-id-color-wisteria-800-rgb-params}),
    0.3
  );
}

.buttonReset {
  appearance: none;
  display: inline;
  background: transparent;
  color: inherit;
  font: inherit;
  cursor: pointer;
  margin: 0;
  padding: 0;
  border: 0;
}

.buttonDefault {
  @include button-mixing(
    // Use of variable fallbacks to switch between Heart and Zen themes (use Zen as default fallback)
    $background: $kz-var-color-white,
    $border-color: var($kz-var-id-color-iron, $kz-var-color-wisteria-200),
    $color: $kz-var-color-wisteria-800,
    $hover-background: $kz-var-color-stone,
    $hover-border-color: var($kz-var-id-color-slate, $kz-var-color-wisteria-400),
    $active-background: var($kz-var-id-color-stone, $kz-var-color-ash),
    $active-border-color:
      var($kz-var-id-color-slate, $kz-var-color-wisteria-500),
    $disabled-background: $kz-var-color-white,
    $disabled-border-color:
      var(--dt-heart-disabled-border-color, $kz-var-color-wisteria-200),
    $disabled-color: var(--dt-heart-disabled-color, $kz-var-color-wisteria-300)
  );
}

.buttonPrimary {
  // #58b59a is equal to add-tint($ca-palette-seedling, 10%). Temporary until we remove Zen (Wisteria)
  @include button-mixing(
    $background: var($kz-var-id-color-seedling-300, #58b59a),
    $border-color: var($kz-var-id-color-seedling-300, #58b59a),
    $color: var($kz-var-id-color-wisteria-800, $kz-var-color-white),
    $hover-background:
      var($kz-var-id-color-seedling-400, $kz-var-color-seedling-500),
    $hover-border-color:
      var($kz-var-id-color-seedling-400, $kz-var-color-seedling-500),
    $active-background: $kz-var-color-seedling-500,
    $active-border-color: $kz-var-color-seedling-500,
    $disabled-background: $kz-var-color-white,
    $disabled-border-color:
      var(--dt-heart-disabled-border-color, $kz-var-color-wisteria-100),
    $disabled-color: var(--dt-heart-disabled-color, $kz-var-color-wisteria-300)
  );
}

.default,
.primary {
  @include kz-typography-paragraph-body-bold;
  top: initial; // override from ca-type-inter-body-bold -> ca-type-inter -> ca-type
  text-align: left;
  position: inherit;
  text-decoration: none;
  color: inherit;
  padding: 0.5rem 1rem;
  border: $base-border;
  border-right: 0;
  border-radius: $kz-var-border-solid-border-radius 0 0
    $kz-var-border-solid-border-radius;
  white-space: nowrap;
  min-width: $button-width;
  display: block;
  box-sizing: border-box;

  [dir="rtl"] & {
    border-right: $base-border;
    border-left: 0;
    border-radius: 0 $kz-var-border-solid-border-radius
      $kz-var-border-solid-border-radius 0;
    text-align: right;
  }

  // This seemingly hacky selector specifically has to target the adjacent dropdown
  // button element of the main button currently being hovered/activated over
  &:not(:disabled):not(.disabled) {
    &:hover,
    &:active {
      & + .dropdown > .dropdownButton {
        border-left: 1px solid $kz-var-color-wisteria-400;
      }
    }

    &:active {
      & + .dropdown > .dropdownButton {
        border-left: 1px solid $kz-var-color-wisteria-500;
      }
    }

    [dir="rtl"] &:hover,
    [dir="rtl"] &:active {
      & + .dropdown > .dropdownButton {
        border-left: $base-border;
        border-right: 1px solid $kz-var-color-wisteria-400;
      }
    }

    [dir="rtl"] &:active {
      & + .dropdown > .dropdownButton {
        border-left: $base-border;
        border-right: 1px solid $kz-var-color-wisteria-500;
      }
    }
  }
}

.default {
  composes: buttonDefault;
}

.primary {
  composes: buttonPrimary;
}

.buttonFullBorder {
  border-right: $base-border;
  border-radius: $kz-var-border-solid-border-radius;
  min-width: 0;

  [dir="rtl"] & {
    border-left: $base-border;
    border-right: inherit;
  }
}

.buttonsContainer {
  display: flex;
  flex-direction: row;
}

.dropdown {
  position: relative;
}

.dropdownButtonDefault,
.dropdownButtonPrimary {
  cursor: pointer;
  display: flex;
  height: 100%;
  width: 100%;
  align-items: center;
  justify-content: center;
  padding: 0 0.75rem;
  border: $base-border;
  border-radius: 0 $kz-var-border-solid-border-radius
    $kz-var-border-solid-border-radius 0;

  [dir="rtl"] & {
    border-radius: $kz-var-border-solid-border-radius 0 0
      $kz-var-border-solid-border-radius;
  }
}

.dropdownButtonDefault {
  composes: buttonReset buttonDefault;
}

.dropdownButtonPrimary {
  composes: buttonReset buttonPrimary;

  --dt-border-left-color-heart: rgba(
    var(#{$kz-var-id-color-seedling-400-rgb-params}),
    0.7
  );

  // Making the left | right border white to separate the button with dropdown button
  /* stylelint-disable declaration-no-important */
  border-left-color: var(
    --dt-border-left-color-heart,
    $kz-var-color-white
  ) !important;

  [dir="rtl"] & {
    // equal to add-tint($ca-palette-seedling, 10%). Temporary until we remove Zen
    border-left-color: #58b59a !important;
    border-left-color: var(
      --dt-border-left-color-heart,
      $kz-var-color-white
    ) !important;
  }

  &:active,
  &:hover {
    border-left-color: transparent !important;
  }
  /* stylelint-enable declaration-no-important */
}

.dropdownIcon {
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
}

.menuContainer {
  z-index: $ca-z-index-dropdown;
  width: 100%;
  position: absolute;
}

/*
This is copied from MenuList kaizen component. This is being used only by the Elm
version since the React version relies on kaizen's MenuList
 */

.menuList {
  background: white;
  border: $kz-var-border-solid-border-width $kz-var-border-solid-border-style
    $kz-var-color-wisteria-200;
  box-shadow: $kz-var-shadow-small-box-shadow;
  line-height: 40px;
}

.menuItem {
  @include ca-type-inter-body;
  @include ca-inherit-baseline;
  composes: interactiveIconWrapper from "~@kaizen/component-library/components/Icon/Icon.module.scss";
  background: transparent;
  color: $kz-var-color-wisteria-800;
  cursor: pointer;
  text-align: left;

  transition: $ca-duration-immediate background-color ease,
    $ca-duration-immediate color ease;

  padding: 10px $side-padding;
  text-decoration: none;
  display: flex;
  flex: 0 0 100%;

  [dir="rtl"] & {
    text-align: right;
  }

  &.menuItem--active,
  &:hover,
  &:focus {
    background: $kz-var-color-stone;
    color: $kz-var-color-cluny-500;
    // override Murmur global styles :(
    text-decoration: none;

    .menuItem__Icon {
      color: $kz-var-color-cluny-500;
    }
  }
}
