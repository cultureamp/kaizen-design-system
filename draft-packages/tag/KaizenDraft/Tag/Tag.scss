@import "~@kaizen/design-tokens/sass/color-vars";
@import "~@kaizen/design-tokens/sass/border-vars";
@import "~@kaizen/design-tokens/sass/spacing-vars";
@import "~@kaizen/design-tokens/sass/typography-vars";
@import "~@kaizen/design-tokens/sass/variable-identifiers";
@import "~@kaizen/deprecated-component-library-helpers/styles/layout";

$medium: calc(#{$kz-var-spacing-md} * 1.25);
$small: $kz-var-spacing-md;

// reset user agent styles for button element type
@mixin button-reset {
  appearance: none;
  background: transparent;
  border: none;
  font: inherit;
  margin: 0;
  padding: 0;
  transition: none; // override Murmur global styles :(
}

.root {
  @include ca-margin($end: calc(#{$kz-var-spacing-md} * 0.5));
  font-size: $kz-var-typography-paragraph-small-font-size;
  font-weight: $kz-var-typography-paragraph-small-font-weight;
  letter-spacing: $kz-var-typography-paragraph-small-letter-spacing;
  color: $kz-var-color-wisteria-800;
  display: inline-block;
  border: $kz-var-border-borderless-border-width
    $kz-var-border-borderless-border-style
    $kz-var-border-borderless-border-color;
  border-radius: calc(#{$kz-var-spacing-md} * 0.75);
  padding: 0 calc(#{$kz-var-spacing-md} * 0.4);
  box-sizing: border-box;
}

.layoutContainer {
  height: 100%;
  display: flex;
  align-items: center;
}

.validationIcon {
  @include ca-margin(
    $start: calc(#{$kz-var-spacing-md} * -0.15),
    $end: calc(#{$kz-var-spacing-md} * 0.125)
  );
  display: flex;
  align-items: center;
}

.textContent {
  @include kz-typography-paragraph-small;
  @include ca-inherit-baseline;
  margin-top: -1px;
}

.dismissButton {
  @include button-reset;
  position: relative;
  display: flex;
  height: 100%;
  align-items: center;
  padding: 0 $kz-var-spacing-xs;
  margin-right: -0.6625rem;
  margin-left: -0.225rem;

  --dt-dismiss-icon-color-heart: rgba(
    var(#{$kz-var-id-color-wisteria-800-rgb-params}),
    0.7
  );
  $dt-dismiss-icon-color: var(
    --dt-dismiss-icon-color-heart,
    $kz-var-color-wisteria-600
  );

  color: $dt-dismiss-icon-color;
  cursor: pointer;

  &:hover {
    color: var($kz-var-id-color-wisteria-800, $kz-var-color-wisteria-700);
  }

  &:active {
    color: $kz-var-color-wisteria-800;
  }

  svg {
    position: relative;
  }

  :global(.js-focus-visible) & {
    outline: none;

    // show custom focus ring when :focus-visible
    &:global(.focus-visible) .iconWrapper {
      color: var($kz-var-id-color-wisteria-800, $kz-var-color-wisteria-700);

      &::after {
        $focus-ring-offset: calc((#{$kz-var-border-focus-ring-border-width}));
        content: "";
        position: absolute;
        background: transparent;
        border-radius: 50%;
        border-width: $kz-var-border-focus-ring-border-width;
        border-style: $kz-var-border-focus-ring-border-style;
        border-color: $kz-var-color-cluny-500;
        top: calc(-1 * #{$focus-ring-offset});
        left: calc(-1 * #{$focus-ring-offset});
        right: calc(-1 * #{$focus-ring-offset});
        bottom: calc(-1 * #{$focus-ring-offset});
      }
    }
  }
}

.background {
  // As our icons are only one-tone, this span places
  // a white background under the dismissible icon to
  // give the illusion of a background colour that is
  // different to the rest of the tag
  position: absolute;
  display: inline-block;
  width: calc(#{$kz-var-spacing-xs} + 0.125rem); // optical adjustment
  height: calc(#{$kz-var-spacing-xs} + 0.125rem); // optical adjustment
  background-color: white;
  left: 10px;
  top: 10px;
}

.iconWrapper {
  position: relative;
  height: 16px;
  width: 16px;
}

.truncate {
  text-overflow: ellipsis;
  overflow-x: hidden;
  white-space: nowrap;
}

.inline {
  margin: 0;
}

.medium {
  height: $medium;
}

.small {
  height: $small;
}

.default {
  background-color: var($kz-var-id-color-ash, $kz-var-color-wisteria-200);
}

.sentimentPositive {
  background-color: $kz-var-color-seedling-100;
}

.sentimentNeutral {
  background-color: $kz-var-color-ash;
}

.sentimentNegative {
  background-color: $kz-var-color-coral-100;
}

.sentimentNone {
  background-color: $kz-var-color-white;
  border-color: var($kz-var-id-color-ash, $kz-var-color-wisteria-200);
}

.validationPositive {
  background-color: $kz-var-color-seedling-100;

  .validationIcon {
    color: $kz-var-color-seedling-300;
  }
}

.validationInformative {
  background-color: $kz-var-color-cluny-100;

  .validationIcon {
    color: $kz-var-color-cluny-500;
  }
}

.validationNegative {
  background-color: $kz-var-color-coral-100;

  .validationIcon {
    color: $kz-var-color-coral-500;
  }
}

.validationCautionary {
  background-color: $kz-var-color-yuzu-100;

  .validationIcon {
    color: $kz-var-color-yuzu-500;
  }
}

.statusLive {
  background-color: $kz-var-color-seedling-100;
  color: $kz-var-color-wisteria-800;
}

.statusDraft {
  background-color: var($kz-var-id-color-peach-100, $kz-var-color-peach-200);
  color: $kz-var-color-wisteria-800;
}

.statusClosed {
  background-color: var($kz-var-id-color-coral-100, $kz-var-color-wisteria-200);
}

.statusAction {
  background-color: $kz-var-color-cluny-100;
  color: $kz-var-color-wisteria-800;
}

$pulse-size-initial: 2px;
$pulse-scale-factor: 9;
$pulse-size-after: $pulse-size-initial * $pulse-scale-factor;

.pulse {
  @include ca-margin(
    $start: calc(#{$kz-var-spacing-md} * 0.35),
    $end: calc(#{$kz-var-spacing-md} * 0.15)
  );
  width: $pulse-size-initial;
  height: $pulse-size-initial;
  border-radius: 50%;
  background-color: $kz-var-color-cluny-500;
  display: inline-block;
  position: relative;
  opacity: 0.5;
}

.pulseRing {
  position: absolute;
  width: $pulse-size-after;
  height: $pulse-size-after;
  // this positioning has to be calculated as an exact value as scaling will mess with percentage values
  left: -($pulse-size-after / 2) + ($pulse-size-initial / 2);
  top: -($pulse-size-after / 2) + ($pulse-size-initial / 2);
  border-radius: 50%;
  background-color: $kz-var-color-seedling-500;
  animation: pulsate infinite 2.5s ease-out;
}

@keyframes pulsate {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  50%,
  100% {
    transform: scale(1);
    opacity: 0;
  }
}
