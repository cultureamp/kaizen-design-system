# Chromatic action from https://www.chromatic.com/docs/github-actions
# Using this github action from https://github.com/lightspeedretail/actions-label-prs

name: "chromatic"

on:
  pull_request:
    types: [labeled]
  pull_request_review:
    types: [submitted, dismissed]
  push:
    paths:
      - packages/**
      - draft-packages/**

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            packages:
              - 'packages/**'
              - 'draft-packages/**'
      # run only when merging into master if 'packages' files were changed
      - name: path filters test
        if: steps.filter.outputs.packages == 'true'
        run: echo "packages/** or draft-packages/** has been updated"
  label-pr:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    name: Label PR
    outputs:
      isApproved: ${{ steps.approved.outputs.isApproved }}
    steps:
      - name: Label a pr when approved
        id: approved
        uses: lightspeedretail/actions-label-prs@v1
        with:
          task: "label_pr_when_approved"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPROVALS: "1"
          ADD_LABEL: "approved"
      - name: Remove the approved label
        if: steps.approved.outputs.isApproved == 'false'
        id: remove_label_approved
        uses: lightspeedretail/actions-label-prs@v1
        with:
          task: "label_pr_remove"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REMOVE_LABEL: "approved"
      - name: tests
        run: echo ${{ steps.approved.outputs.isApproved }}

  visual-testing:
    needs: [label-pr]
    if: >
      (github.event.action == 'labeled' && github.event.label.name == 'run chromatic') ||
      needs.label-pr.outputs.isApproved == 'true' ||
      (github.ref == 'refs/heads/master' && needs.paths-filter.outputs.packages == 'true' )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # ðŸ‘ˆ Required to retrieve git history
      - uses: actions/setup-node@v2
        with:
          cache: yarn
          node-version-file: .nvmrc
          registry-url: https://npm.pkg.github.com/
      - run: yarn install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ðŸ‘‡ Adds Chromatic as a step in the workflow
      - name: Publish to Chromatic
        uses: chromaui/action@v1
        # Chromatic GitHub Action options
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          autoAcceptChanges: master # ðŸ‘ˆ Auto accept master builds (why https://www.chromatic.com/docs/github-actions#github-squashrebase-merge-and-the-main-branch)
