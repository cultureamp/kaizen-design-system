env:
  KAIZEN_ROLE_ARN: ${BRANCH_ROLE_ARN}
  KAIZEN_DOMAIN_NAME: ${BRANCH_DOMAIN_NAME}
  KAIZEN_DISTRIBUTION_ID: ${BRANCH_DISTRIBUTION_ID}

x-defaults: &defaults
  agent_query_rules: ["queue=build-unrestricted"]
  plugins:
    - docker#v3.3.0:
        image: "node:10.16.3-alpine"
        environment:
          - KAIZEN_BASE_PATH

x-publish-env: &publish-env
  environment:
    - AWS_ACCESS_KEY_ID
    - AWS_SECRET_ACCESS_KEY
    - AWS_SESSION_TOKEN
    - KAIZEN_DOMAIN_NAME
    - KAIZEN_DISTRIBUTION_ID
    - KAIZEN_BASE_PATH

steps:
  - name: ":nut_and_bolt: Compile"
    command: ".buildkite/scripts/compile.sh"
    <<: *defaults

  - name: ":mag: Lint"
    command: ".buildkite/scripts/lint.sh"
    <<: *defaults

  - name: ":package: Build (site)"
    command: ".buildkite/scripts/build-site.sh"
    artifact_paths: "./site.tar.gz"
    <<: *defaults

  - name: ":package: Build (storybook)"
    command: ".buildkite/scripts/build-storybook.sh"
    artifact_paths: "./storybook.tar.gz"
    <<: *defaults

  - wait

  - name: ":tanabata_tree: Publish: ${KAIZEN_DOMAIN_NAME}${KAIZEN_BASE_PATH}"
    command: ".buildkite/scripts/publish.sh"
    env:
      KAIZEN_EXTRACT_ARTIFACTS: true
    <<: *defaults
    plugins:
      - cultureamp/aws-assume-role#v0.1.0:
          role: "${KAIZEN_ROLE_ARN}"
      - docker#v3.3.0:
          image: "mesosphere/aws-cli"
          entrypoint: "/bin/sh"
          <<: *publish-env
