import{r as n,R as p}from"./index-CTjT7uj6.js";import{w as l,u as r,e as u}from"./index-BySiBzEG.js";import{F as c}from"./FilterDatePicker-Bh5QQ4BN.js";import{F as s}from"./FilterButton-BGzpTfmP.js";import"./index-DZLKizrv.js";import"./getLocale-DZ-phe2v.js";import"./isInvalidDate-CQ4jNt7-.js";import"./jsx-runtime-Cw0GR0a5.js";import"./startOfDay-MoyOWjoN.js";import"./FilterContents-MyXMWDj6.js";import"./Combination-DFaMps7A.js";import"./tslib.es6-CY32MZYl.js";import"./Trap-DVnrG7EK.js";import"./defineProperty-C21ZqnLH.js";import"./inheritsLoose-p_S3dtD8.js";import"./index-CCQ3W5xA.js";import"./usePopper-D4ykrdaR.js";import"./index-9r8iugjR.js";import"./useDateInputHandlers-CFHAAAKV.js";import"./LabelledMessage-CyRdzdqY.js";import"./validateDate-Bbd7IJoY.js";import"./enums-Cb8LLpRk.js";import"./isDisabledDate-DCznrglD.js";import"./Label-DlmzItqQ.js";import"./isRefObject-39zMTbtm.js";import"./Input-BFyrvMXQ.js";import"./useIntl-Ci3jBQGG.js";import"./index-DBmEjBSQ.js";import"./hoist-non-react-statics.cjs-DQogQWOa.js";import"./message-BF0EX5jj.js";import"./FieldMessage-D8OmrYjz.js";import"./ExclamationWhiteIcon-dXgVQUA_.js";import"./SVG-7WFwBCn9.js";import"./Text-D2gQH1xL.js";import"./CalendarSingle-DmO3h1TK.js";import"./ArrowBackwardIcon-D9T-C9o2.js";import"./ArrowForwardIcon-BVPHqAvL.js";import"./isValidWeekStartsOn-CZGl9tvK.js";import"./en-AU-C5dfMWdV.js";import"./ChevronDownIcon-prLLyjG_.js";import"./ChevronUpIcon-D9pr3Qd6.js";import"./FilterButtonBase-D953FwLo.js";const rt={title:"Components/Filter Date Picker/Tests",component:c,parameters:{a11y:{config:{rules:[{id:"color-contrast",enabled:!1}]}}}},d={render:()=>{const[t,e]=n.useState(!1),[o,i]=n.useState();return p.createElement(c,{renderTrigger:a=>p.createElement(s,{...a}),id:"filter-dp--test",label:"Date",locale:"en-AU",isOpen:t,setIsOpen:e,selectedDate:o,onDateChange:i})},args:{renderTrigger:t=>p.createElement(s,{...t})}},ot={...d,play:async({canvasElement:t,step:e})=>{const{getByRole:o,getByLabelText:i,queryByRole:a}=l(t);await e("Open popover",async()=>{await r.click(o("button",{name:"Date"}))}),await e("Type value and press Enter key",async()=>{const m=i("Date",{selector:"input"});await r.click(m),await r.type(m,"03/05/2022"),await r.keyboard("{Enter}")}),await e("Ensure the popover didn't re-open",async()=>{u(a("dialog")).not.toBeInTheDocument()})}},it=["SubmitInputViaEnterKey"];export{ot as SubmitInputViaEnterKey,it as __namedExportsOrder,rt as default};
