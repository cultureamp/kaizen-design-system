import{R as e,r as n}from"./index-CTjT7uj6.js";import{f as b}from"./index-BySiBzEG.js";import{H as O}from"./index-BtE2hmwC.js";import{d as S}from"./defaultMonthControls-DfKCABiO.js";import{r as v}from"./renderTriggerControls-DBfT5i7c.js";import{T as h}from"./Text-D2gQH1xL.js";import{v as P,d as y}from"./validationControls-Cu3oWjDv.js";import{F as m,a as C}from"./FilterDateRangePicker-IyXssijA.js";import{F as D}from"./FilterButton-BGzpTfmP.js";import{F as B}from"./FilterButtonRemovable-CDjh8qGF.js";import"./index-DZLKizrv.js";import"./chunk-454WOBUV-CM0pFb8Z.js";import"./v4-CQkTLCs1.js";import"./index-CCQ3W5xA.js";import"./getLocale-DZ-phe2v.js";import"./isInvalidDate-CQ4jNt7-.js";import"./jsx-runtime-Cw0GR0a5.js";import"./startOfDay-MoyOWjoN.js";import"./validateDate-Bbd7IJoY.js";import"./enums-Cb8LLpRk.js";import"./isDisabledDate-DCznrglD.js";import"./Label-DlmzItqQ.js";import"./isRefObject-39zMTbtm.js";import"./Input-BFyrvMXQ.js";import"./LabelledMessage-CyRdzdqY.js";import"./useIntl-Ci3jBQGG.js";import"./index-DBmEjBSQ.js";import"./tslib.es6-CY32MZYl.js";import"./hoist-non-react-statics.cjs-DQogQWOa.js";import"./message-BF0EX5jj.js";import"./useDateInputHandlers-CFHAAAKV.js";import"./FieldMessage-D8OmrYjz.js";import"./ExclamationWhiteIcon-dXgVQUA_.js";import"./SVG-7WFwBCn9.js";import"./VisuallyHidden-CDYjeGzr.js";import"./CalendarRange-BpKdqjCg.js";import"./ArrowBackwardIcon-D9T-C9o2.js";import"./ArrowForwardIcon-BVPHqAvL.js";import"./en-AU-C5dfMWdV.js";import"./FilterContents-MyXMWDj6.js";import"./Combination-DFaMps7A.js";import"./Trap-DVnrG7EK.js";import"./defineProperty-C21ZqnLH.js";import"./inheritsLoose-p_S3dtD8.js";import"./usePopper-D4ykrdaR.js";import"./index-9r8iugjR.js";import"./ChevronDownIcon-prLLyjG_.js";import"./ChevronUpIcon-D9pr3Qd6.js";import"./FilterButtonBase-D953FwLo.js";import"./ClearIcon-BcQoGkgT.js";import"./index-CdP7-hSn.js";import"./ButtonGroup-Cm1_R1hn.js";const Fe={title:"Components/Filter Date Range Picker",component:m,argTypes:{classNameOverride:{control:!1,description:"Add extra classnames to the component. (This doesn't work - to be fixed)"},...S,...P,...v,disabledDays:y,locale:{options:["en-US","en-AU"],control:{type:"radio"}},inputStartDateProps:{table:{type:{summary:'Omit<DateInputProps, "id">'}}},inputEndDateProps:{table:{type:{summary:'Omit<DateInputProps, "id">'}}},isOpen:{control:!1},selectedRange:{options:["None","Partial Range","Complete Range"],control:{type:"select",labels:{None:"undefined","Partial Range":"{ from: new Date() }","Complete Range":'{ from: new Date("2022-05-01"), to: new Date("2022-05-12") }'}},mapping:{None:void 0,"Partial Range":{from:new Date},"Complete Range":{from:new Date("2022-05-01"),to:new Date("2022-05-12")}}},description:{control:"text"}},args:{label:"Dates",locale:"en-AU",isOpen:!1,selectedRange:void 0,renderTrigger:t=>e.createElement(D,{...t}),setIsOpen:b(),onRangeChange:b()}},R={render:t=>{const[l,s]=n.useState(t.isOpen),[i,r]=n.useState();return n.useEffect(()=>{r(t.selectedRange)},[t.selectedRange]),e.createElement(m,{...t,isOpen:l,setIsOpen:s,selectedRange:i,onRangeChange:r})}},F=`
// This code is not connected to the controls of the attached component.
// @note: If you want a removable button, use the commented out code instead.

import {
  FilterButton,
  FilterButtonProps,
//  FilterButtonRemovable,
  FilterDateRangePicker,
} from "@kaizen/components"

const [isOpen, setIsOpen] = useState<boolean>(false)
const [range, setRange] = useState<DateRange | undefined>()

return (
  <FilterDateRangePicker
    id="filter-drp--default"
    label="Dates"
    locale="en-AU"
    renderTrigger={(triggerButtonProps: FilterButtonProps): JSX.Element => (
      <FilterButton {...triggerButtonProps} />
    )}
    // renderTrigger={(triggerButtonProps: FilterButtonProps): JSX.Element => (
    //   <FilterButtonRemovable
    //     triggerButtonProps={{ ...triggerButtonProps }}
    //     removeButtonProps={{
    //       onClick: (): void => undefined,
    //     }}
    //   />
    // )}
    isOpen={isOpen}
    setIsOpen={setIsOpen}
    selectedRange={range}
    onRangeChange={setRange}
  />
)
`,Ie={...R,args:{id:"filter-drp--default",renderTrigger:"Filter Button"},parameters:{docs:{canvas:{sourceState:"shown"},source:{code:F}}}},Te={render:()=>{const[t,l]=n.useState(!1),[s,i]=n.useState(),[r,d]=n.useState(!1),[c,u]=n.useState();return e.createElement("div",{style:{display:"flex",gap:"1rem"}},e.createElement(m,{id:"filterdrp--filter-button",label:"FilterButton",locale:"en-AU",renderTrigger:p=>e.createElement(D,{...p}),isOpen:t,setIsOpen:l,selectedRange:s,onRangeChange:i}),e.createElement(m,{id:"filterdrp--filter-button-removable",label:"FilterButtonRemovable",locale:"en-AU",renderTrigger:p=>e.createElement(B,{triggerButtonProps:{...p},removeButtonProps:{onClick:()=>{}}}),isOpen:r,setIsOpen:d,selectedRange:c,onRangeChange:u}))}},we={render:t=>{const[l,s]=n.useState(!1),[i,r]=n.useState(!1),[d,c]=n.useState(!1),[u,p]=n.useState(),[f,a]=n.useState({from:new Date}),[o,g]=n.useState({from:new Date("2022-05-01"),to:new Date("2022-05-12")});return e.createElement("div",{style:{display:"flex",gap:"1rem"}},e.createElement(m,{...t,id:"filterdrp--not-selected",label:"Not selected",isOpen:l,setIsOpen:s,selectedRange:u,onRangeChange:p}),e.createElement(m,{...t,id:"filterdrp--partial-range",label:"Partial range",isOpen:i,setIsOpen:r,selectedRange:f,onRangeChange:a}),e.createElement(m,{...t,id:"filterdrp--complete",label:"Complete range",isOpen:d,setIsOpen:c,selectedRange:o,onRangeChange:g}))}},ke={...R,args:{id:"filterdrp--description",label:"Open to see description",description:"This is a custom description"}},xe={...R,args:{id:"filterdrp--extend-input-props",label:"Check the DOM for the inputs",inputStartDateProps:{"data-testid":"filterdrp--input-start-testid"},inputEndDateProps:{"data-testid":"filterdrp--input-end-testid"}}},I=({validationResponse:t})=>e.createElement("div",null,e.createElement(h,{variant:"body"},"NOTE: This story includes additional custom validation to provide some guidance when dealing with validation other than date isInvalid or isDisabled."),e.createElement("ul",null,e.createElement("li",null,"There will be a caution when the selectedDay ",e.createElement("strong",null,"is valid")," ","but ",e.createElement("strong",null,"is not within this year"),"."),e.createElement("li",null,"There will be an error when the"," ",e.createElement("strong",null,"submit button is clicked")," and there is a"," ",e.createElement("strong",null,"current error"),".")),e.createElement(h,{variant:"body"},"The ",e.createElement("code",null,"onValidate")," callback returns a"," ",e.createElement("code",null,"validationResponse")," object which provides data such as a default validation message, and can be utilised for custom validation."),e.createElement(O,{className:"json"},JSON.stringify(t,null,"	")),e.createElement("ul",null,e.createElement("li",null,e.createElement("code",null,"isInvalid"),': A date that cannot be parsed. e.g "potato".'),e.createElement("li",null,e.createElement("code",null,"isDisabled"),": A date that have been set as disabled through the ",e.createElement("code",null,"disabledDates")," prop."),e.createElement("li",null,e.createElement("code",null,"isEmpty"),": Input is empty."),e.createElement("li",null,e.createElement("code",null,"isValidDate"),": Date input that is not ",e.createElement("code",null,"invalid")," ","nor ",e.createElement("code",null,"disabled")," nor ",e.createElement("code",null,"empty"),"."))),Ne={render:()=>{const[t,l]=n.useState(),[s,i]=n.useState(),[r,d]=n.useState(),c=(a,o)=>{var g;if(i(a),a.isValidDate&&((g=a.date)==null?void 0:g.getFullYear())!==new Date().getFullYear()){d(E=>({...E,[o]:{status:"caution",message:`(${o}) Date is not this year`}}));return}d(E=>({...E,[o]:a.validationMessage}))},u=a=>c(a,"dateStart"),p=a=>c(a,"dateEnd"),f=a=>{a.preventDefault();let o;if(r!=null&&r.dateStart&&(o={dateStart:{status:"error",message:"Error for start date"}}),r!=null&&r.dateEnd&&(o={...o,dateEnd:{status:"error",message:"Error for end date"}}),o)return d(o),alert("Error");alert("Success")};return e.createElement(e.Fragment,null,e.createElement("form",{onSubmit:f},e.createElement(C,{id:"datepicker-default",label:"Label",selectedRange:t,onRangeChange:l,onValidate:{dateStart:u,dateEnd:p},validationMessage:r,disabledDays:new Date,locale:"en-AU"}),e.createElement("div",{style:{marginTop:"2rem",marginBottom:"2rem"}},e.createElement("button",{type:"submit"},"Submit"))),e.createElement(I,{validationResponse:s}))},parameters:{docs:{source:{type:"code"}},controls:{disable:!0}}},Ve=["Playground","RenderTrigger","SelectedRange","Description","ExtendInputProps","Validation"];export{ke as Description,xe as ExtendInputProps,Ie as Playground,Te as RenderTrigger,we as SelectedRange,Ne as Validation,Ve as __namedExportsOrder,Fe as default};
