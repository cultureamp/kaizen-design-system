import{R as t}from"./index-CTjT7uj6.js";import{a as d}from"./chunk-454WOBUV-CM0pFb8Z.js";import{w as s,u as l,a as i,e as c}from"./index-BySiBzEG.js";import{G as m}from"./GenericModal-PBdxQDAn.js";import{M as u,a as y,b as f}from"./ModalAccessibleLabel-DkJ4xCwy.js";import"./v4-CQkTLCs1.js";import"./index-DZLKizrv.js";import"./index-9r8iugjR.js";import"./objectWithoutPropertiesLoose-gpp6Tpz-.js";import"./defineProperty-C21ZqnLH.js";import"./Trap-DVnrG7EK.js";import"./inheritsLoose-p_S3dtD8.js";import"./tslib.es6-CY32MZYl.js";import"./CloseIcon-BAUhi63R.js";import"./SVG-7WFwBCn9.js";import"./index-CCQ3W5xA.js";import"./IconButton-DH93ECWt.js";import"./GenericButton-CnAyP-Wm.js";import"./utils-e-dMXvly.js";import"./focusSafely-ByiDPXQJ.js";import"./SSRProvider-C8o06Znb.js";import"./useFocusable-CuIK6Qs-.js";import"./Link-DkKiEG74.js";import"./usePress-nudZ2Xgz.js";import"./Badge-D9GUNioS.js";import"./LoadingSpinner-DHfeGxpm.js";import"./VisuallyHidden-CDYjeGzr.js";const z={title:"Components/Modals/Generic Modal/Tests",component:m},p={render:({isOpen:a,...e})=>{const[n,o]=t.useState(a),r=()=>o(!1);return t.createElement(t.Fragment,null,t.createElement("button",{type:"button",className:"border border-gray-500",onClick:()=>o(!0)},"Open Modal"),t.createElement(m,{...e,isOpen:n,onOutsideModalClick:r,onEscapeKeyup:r,id:"GenericModalTestId"},t.createElement(u,null,t.createElement(y,null,"Test Modal")),t.createElement(f,null,t.createElement("form",null,t.createElement("label",{htmlFor:"modal-input-play-test"},"Add link"),t.createElement("input",{type:"text",id:"modal-input-play-test"})))))},play:async({canvasElement:a,step:e})=>{const{getByRole:n}=s(a),o=n("button",{name:"Open Modal"});await e("Open modal",async()=>{await l.click(o)}),await e("Default focus is shifted to the Accessible title",async()=>{await i(()=>{c(document.activeElement).toHaveTextContent("Test Modal")})})}},J={...p,name:"ModalAccessibleLabel retains focus if onAfterEnter is called",args:{onAfterEnter:()=>d("openCallBack")},play:async({canvasElement:a,step:e})=>{const{getByRole:n}=s(a),o=n("button",{name:"Open Modal"});await e("Open modal",async()=>{await l.click(o)}),await e("Accessible title still has focus",async()=>{await i(()=>{c(document.activeElement).toHaveTextContent("Test Modal")})})}},P={...p,args:{onAfterEnter:()=>{var a;return(a=document.getElementById("modal-input-play-test"))==null?void 0:a.focus()}},name:"onAfterEnter can shift focus to internal elements of the modal",play:async({canvasElement:a,step:e})=>{const o=s(a).getByRole("button",{name:"Open Modal"});await e("Open modal",async()=>{await l.click(o)}),await e("Expect activeElement to be the Input",async()=>{await i(()=>{c(document.activeElement).toHaveAccessibleName("Add link")})}),await e("Expect to be able to type without shifting focus",async()=>{await l.keyboard("All lorem and no ipsum make dolar a dull boy...")})}},Q=["TestBase","ModalAccessibleLabelRetainsFocus","TriggerOnAfterEnterFocus"];export{J as ModalAccessibleLabelRetainsFocus,p as TestBase,P as TriggerOnAfterEnterFocus,Q as __namedExportsOrder,z as default};
