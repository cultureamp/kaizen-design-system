import{r as v,R as o}from"./index-CTjT7uj6.js";import{c as $}from"./index-CCQ3W5xA.js";import{H as F}from"./Heading-Y5F8SWRW.js";import{u as P}from"./floating-ui.react-dom-DficdbDq.js";import{M as _}from"./MultiSelectToggle-CE5xIBh8.js";import{M as x}from"./MultiSelectOptions-BzeWFkkX.js";import{F as y}from"./FieldMessage-D8OmrYjz.js";import{P as I}from"./Popover-7U2x2z8g.js";const A="_toggleContainer_13j1z_2",k="_popover_13j1z_6",E={toggleContainer:A,popover:k},R=({id:w,label:O,items:c,selectedValues:a,description:p,onSelectedValuesChange:i,isOpen:l,onOpenChange:u,classNameOverride:S,validationMessage:r,...M})=>{const t=w??v.useId(),m=`${t}-description`,d=`${t}-validation-message`,g=v.useRef(null),{refs:s}=P(),b=()=>u(!l),f=()=>u(!1),h=e=>{s.reference.current.contains(e.target)||(e.stopPropagation(),f())},T=c.reduce((e,n)=>(e[n.value]=n,e),{}),q=e=>{const n=new Set(a.values());n.delete(e),i(n)},C=()=>{i(new Set([]))};return o.createElement("div",{id:t,className:$(S),...M},o.createElement(F,{tag:"span",variant:"heading-6",id:`${t}--label`},O),o.createElement("div",{ref:s.setReference,className:E.toggleContainer},o.createElement(_,{ref:g,id:`${t}--toggle`,"aria-labelledby":`${t}--label`,"aria-describedby":`${d} ${m}`,"aria-controls":`${t}--popover`,onClick:b,isOpen:l,selectedOptions:Array.from(a).map(e=>T[e]),status:r==null?void 0:r.status,onRemoveOption:q,onRemoveAllOptions:C})),r&&o.createElement(y,{id:d,...r}),p&&o.createElement(y,{id:m,message:p}),l&&o.createElement(I,{refs:s,id:`${t}--popover`,focusOnProps:{enabled:!0,onClickOutside:h,onEscapeKey:f,shards:[g],noIsolation:!0,onActivation:()=>{var e,n;return(n=(e=s.floating)==null?void 0:e.current)==null?void 0:n.focus()}},classNameOverride:E.popover},o.createElement(x,{id:`${t}--options`,options:c,onChange:i,selectedValues:a})))};R.displayName="MultiSelect";R.__docgenInfo={description:"",methods:[],displayName:"MultiSelect",props:{label:{required:!0,tsType:{name:"string"},description:""},items:{required:!0,tsType:{name:'intersection["options"]',raw:'MultiSelectOptionsProps["options"]'},description:""},selectedValues:{required:!0,tsType:{name:"Set",elements:[{name:"union",raw:'MultiSelectOption["value"]'}],raw:'Set<MultiSelectOption["value"]>'},description:""},description:{required:!1,tsType:{name:'FieldMessageProps["message"]',raw:'FieldMessageProps["message"]'},description:"A description that provides context for the field"},onSelectedValuesChange:{required:!0,tsType:{name:'intersection["onChange"]',raw:'MultiSelectOptionsProps["onChange"]'},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},onOpenChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(isOpen: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isOpen"}],return:{name:"void"}}},description:""},validationMessage:{required:!1,tsType:{name:"signature",type:"object",raw:`{
  status?: Extract<FieldMessageStatus, "error" | "caution">
  message: string | React.ReactElement
}`,signature:{properties:[{key:"status",value:{name:"Extract",elements:[{name:"FieldMessageStatus"},{name:"union",raw:'"error" | "caution"',elements:[{name:"literal",value:'"error"'},{name:"literal",value:'"caution"'}]}],raw:'Extract<FieldMessageStatus, "error" | "caution">',required:!1}},{key:"message",value:{name:"union",raw:"string | React.ReactElement",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement"}],required:!0}}]}},description:"A status and message to provide context to the validation issue"}}};export{R as M};
